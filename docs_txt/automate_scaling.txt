'''    
    automate_scaling(A, e_ref_index, e, t,
                     escan_time, tscan_energy, time_zeros=None,
                     exotic_t=None, exotic_tscan_energy=None,
                     exotic_e_ref_index=None,
                     escan_data=None, escan_data_eps=None,
                     tscan_data=None, tscan_data_eps=None,
                     exotic_tscan_data=None, exotic_tscan_data_eps=None)
                     
    Automate scale escan, tscan and some exotic tscan
    If you scale tscan with fast time delay ( < 10 ps)
    time zero will change scaling factor. So, beware of the
    change of time zero.
    However, scaling parameter for tscan w.r.t. escan (r_t_i)
    may recover such effect. So, I think that for not so early time delay
    (1 ps ~ 10 ps) region time_zero shifted about +/- IRF ~ 300 fs
    neglectable.
    If escan_time[e_ref_index] < 10 ps
    I will print warning message for you.

    Automate scaling procedure

    0. Fit static spectrum with fit_static.py
       Carefully watch graphs.

    1. Scaling escan_data using A-method

    2-1. If escan_time[e_ref_index] := e_ref > 10 ps,
         then take difference flu spectrum at tscan energy
         in e_ref delay escan.
         Next take difference flu spectrum at e_ref delay in tscan.
         Now fit diff flu spec at e_ref delay in tscan to
         diff flu spec at tscan_energy in e_ref delay escan.

    2-2. If e_ref < 10 ps, you must set time_zeros for all tscan.
         Then do procedure simuliar to 2-2.

    3. Watch changes in timezero during fitting.
       If timezero changes a lot in fitting, consider simultaneous
       scaling (i.e. fitting and scaling at once.)

    4. After do automate_scaling, you need to correct scaling
       due to the prossiblity of inconsistent laser overlap.
   
    5. Correct and do automate_scaling again with corrected escan and
       A = A_ref*np.ones(A.shape).


    Warning and Error case

    Warning (no harm, just for warn)
    
    1. early delay (e_ref < 10)

    Error (it aborts procedure)

    1. early delay without time zero : e_ref < 10 but time zero is not set.

   automate_scaling: Automate scale escan, tscan

   Parameters:
      * **A** (*numpy_1d_array*) -- array of parameter A for each
        escan

      * **e_ref** (*int*) -- index for reference escan for scaling of
        escan and tscan

      * **e** (*numpy_1d_array*) -- array of energies in which we
        measured escan

      * **t** (*numpy_1d_array*) -- array of time delays in which we
        measured tscan

      * **escan_time** (*numpy_1d_array*) -- array of time delay at
        which we measure escan

      * **tscan_energy** (*numpy_1d_array*) -- array of energy at
        which we measure tscan

      * **time_zeros** (*numpy_1d_array*) -- array of time zero for
        every tscan (optional, mandatory escan_time[e_ref] < 10 ps)

      * **escan_data** (*numpy_nd_array*) -- data for escan (Note.
        escan data does not contains energy range)

      * **escan_data_eps** (*numpy_nd_array*) -- error for escan data

      * **tscan_data** (*numpy_nd_array*) -- data for tscan (Note.
        tscan data does not contains time delay range)

      * **tscan_data_eps** (*numpy_nd_array*) -- error for tscan

      * **warn** (*bool*) -- whether or not prints warning message
        [default: False]

   Returns:
      scaled_data scaled_data['escan'] : scaled data for escan
      scaled_data['escan_eps'] : scaled error for escan
      scaled_data['tscan'] : scaled data for tscan
      scaled_data['tscan_eps'] : scaled error for tscan

   Return type:
      dict
'''
